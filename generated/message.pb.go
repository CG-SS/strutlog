// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: message.proto

package generated

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PrimitiveType int32

const (
	PrimitiveType_BoolType       PrimitiveType = 0
	PrimitiveType_StringType     PrimitiveType = 1
	PrimitiveType_IntType        PrimitiveType = 2
	PrimitiveType_Int8Type       PrimitiveType = 3
	PrimitiveType_Int16Type      PrimitiveType = 4
	PrimitiveType_Int32Type      PrimitiveType = 5
	PrimitiveType_Int64Type      PrimitiveType = 6
	PrimitiveType_UIntType       PrimitiveType = 7
	PrimitiveType_UInt8Type      PrimitiveType = 8
	PrimitiveType_UInt16Type     PrimitiveType = 9
	PrimitiveType_UInt32Type     PrimitiveType = 10
	PrimitiveType_UInt64Type     PrimitiveType = 11
	PrimitiveType_ByteType       PrimitiveType = 12
	PrimitiveType_RuneType       PrimitiveType = 13
	PrimitiveType_Float32Type    PrimitiveType = 14
	PrimitiveType_Float64Type    PrimitiveType = 15
	PrimitiveType_Complex64Type  PrimitiveType = 16
	PrimitiveType_Complex128Type PrimitiveType = 17
	PrimitiveType_ArrayType      PrimitiveType = 18
	PrimitiveType_MapType        PrimitiveType = 19
	PrimitiveType_StrutType      PrimitiveType = 20
)

// Enum value maps for PrimitiveType.
var (
	PrimitiveType_name = map[int32]string{
		0:  "BoolType",
		1:  "StringType",
		2:  "IntType",
		3:  "Int8Type",
		4:  "Int16Type",
		5:  "Int32Type",
		6:  "Int64Type",
		7:  "UIntType",
		8:  "UInt8Type",
		9:  "UInt16Type",
		10: "UInt32Type",
		11: "UInt64Type",
		12: "ByteType",
		13: "RuneType",
		14: "Float32Type",
		15: "Float64Type",
		16: "Complex64Type",
		17: "Complex128Type",
		18: "ArrayType",
		19: "MapType",
		20: "StrutType",
	}
	PrimitiveType_value = map[string]int32{
		"BoolType":       0,
		"StringType":     1,
		"IntType":        2,
		"Int8Type":       3,
		"Int16Type":      4,
		"Int32Type":      5,
		"Int64Type":      6,
		"UIntType":       7,
		"UInt8Type":      8,
		"UInt16Type":     9,
		"UInt32Type":     10,
		"UInt64Type":     11,
		"ByteType":       12,
		"RuneType":       13,
		"Float32Type":    14,
		"Float64Type":    15,
		"Complex64Type":  16,
		"Complex128Type": 17,
		"ArrayType":      18,
		"MapType":        19,
		"StrutType":      20,
	}
)

func (x PrimitiveType) Enum() *PrimitiveType {
	p := new(PrimitiveType)
	*p = x
	return p
}

func (x PrimitiveType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PrimitiveType) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[0].Descriptor()
}

func (PrimitiveType) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[0]
}

func (x PrimitiveType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PrimitiveType.Descriptor instead.
func (PrimitiveType) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0}
}

type Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type PrimitiveType `protobuf:"varint,1,opt,name=type,proto3,enum=strutlog.PrimitiveType" json:"type,omitempty"`
	// Types that are assignable to Value:
	//
	//	*Value_BoolValue
	//	*Value_StringValue
	//	*Value_Int32Value
	//	*Value_Int64Value
	//	*Value_Uint32Value
	//	*Value_Uint64Value
	//	*Value_Float32Value
	//	*Value_Float64Value
	Value      isValue_Value     `protobuf_oneof:"value"`
	ArrayValue []*Value          `protobuf:"bytes,10,rep,name=array_value,json=arrayValue,proto3" json:"array_value,omitempty"`
	MapValue   map[string]*Value `protobuf:"bytes,11,rep,name=map_value,json=mapValue,proto3" json:"map_value,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Value) Reset() {
	*x = Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0}
}

func (x *Value) GetType() PrimitiveType {
	if x != nil {
		return x.Type
	}
	return PrimitiveType_BoolType
}

func (m *Value) GetValue() isValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Value) GetBoolValue() bool {
	if x, ok := x.GetValue().(*Value_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (x *Value) GetStringValue() string {
	if x, ok := x.GetValue().(*Value_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (x *Value) GetInt32Value() int32 {
	if x, ok := x.GetValue().(*Value_Int32Value); ok {
		return x.Int32Value
	}
	return 0
}

func (x *Value) GetInt64Value() int64 {
	if x, ok := x.GetValue().(*Value_Int64Value); ok {
		return x.Int64Value
	}
	return 0
}

func (x *Value) GetUint32Value() uint32 {
	if x, ok := x.GetValue().(*Value_Uint32Value); ok {
		return x.Uint32Value
	}
	return 0
}

func (x *Value) GetUint64Value() uint64 {
	if x, ok := x.GetValue().(*Value_Uint64Value); ok {
		return x.Uint64Value
	}
	return 0
}

func (x *Value) GetFloat32Value() float32 {
	if x, ok := x.GetValue().(*Value_Float32Value); ok {
		return x.Float32Value
	}
	return 0
}

func (x *Value) GetFloat64Value() float64 {
	if x, ok := x.GetValue().(*Value_Float64Value); ok {
		return x.Float64Value
	}
	return 0
}

func (x *Value) GetArrayValue() []*Value {
	if x != nil {
		return x.ArrayValue
	}
	return nil
}

func (x *Value) GetMapValue() map[string]*Value {
	if x != nil {
		return x.MapValue
	}
	return nil
}

type isValue_Value interface {
	isValue_Value()
}

type Value_BoolValue struct {
	BoolValue bool `protobuf:"varint,2,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type Value_StringValue struct {
	StringValue string `protobuf:"bytes,3,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type Value_Int32Value struct {
	Int32Value int32 `protobuf:"varint,4,opt,name=int32_value,json=int32Value,proto3,oneof"`
}

type Value_Int64Value struct {
	Int64Value int64 `protobuf:"varint,5,opt,name=int64_value,json=int64Value,proto3,oneof"`
}

type Value_Uint32Value struct {
	Uint32Value uint32 `protobuf:"varint,6,opt,name=uint32_value,json=uint32Value,proto3,oneof"`
}

type Value_Uint64Value struct {
	Uint64Value uint64 `protobuf:"varint,7,opt,name=uint64_value,json=uint64Value,proto3,oneof"`
}

type Value_Float32Value struct {
	Float32Value float32 `protobuf:"fixed32,8,opt,name=float32_value,json=float32Value,proto3,oneof"`
}

type Value_Float64Value struct {
	Float64Value float64 `protobuf:"fixed64,9,opt,name=float64_value,json=float64Value,proto3,oneof"`
}

func (*Value_BoolValue) isValue_Value() {}

func (*Value_StringValue) isValue_Value() {}

func (*Value_Int32Value) isValue_Value() {}

func (*Value_Int64Value) isValue_Value() {}

func (*Value_Uint32Value) isValue_Value() {}

func (*Value_Uint64Value) isValue_Value() {}

func (*Value_Float32Value) isValue_Value() {}

func (*Value_Float64Value) isValue_Value() {}

type Field struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value *Value `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Field) Reset() {
	*x = Field{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Field) ProtoMessage() {}

func (x *Field) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Field.ProtoReflect.Descriptor instead.
func (*Field) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1}
}

func (x *Field) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Field) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []*Field `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{2}
}

func (x *Message) GetFields() []*Field {
	if x != nil {
		return x.Fields
	}
	return nil
}

var File_message_proto protoreflect.FileDescriptor

var file_message_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x08, 0x73, 0x74, 0x72, 0x75, 0x74, 0x6c, 0x6f, 0x67, 0x22, 0x9d, 0x04, 0x0a, 0x05, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x17, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x74, 0x6c, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x69,
	0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1f, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x23, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0a, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0b, 0x69, 0x6e, 0x74,
	0x36, 0x34, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00,
	0x52, 0x0a, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c,
	0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x48, 0x00, 0x52, 0x0b, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x23, 0x0a, 0x0c, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0b, 0x75, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x25, 0x0a, 0x0d, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33,
	0x32, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52,
	0x0c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x25, 0x0a,
	0x0d, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x36, 0x34, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x0c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x36, 0x34, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x30, 0x0a, 0x0b, 0x61, 0x72, 0x72, 0x61, 0x79, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x74, 0x72, 0x75,
	0x74, 0x6c, 0x6f, 0x67, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x61, 0x72, 0x72, 0x61,
	0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3a, 0x0a, 0x09, 0x6d, 0x61, 0x70, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x72, 0x75,
	0x74, 0x6c, 0x6f, 0x67, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x4d, 0x61, 0x70, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x61, 0x70, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x1a, 0x4c, 0x0a, 0x0d, 0x4d, 0x61, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x74, 0x6c, 0x6f, 0x67, 0x2e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x40, 0x0a, 0x05, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x74, 0x6c, 0x6f, 0x67, 0x2e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x32, 0x0a, 0x07, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x74, 0x72, 0x75, 0x74, 0x6c, 0x6f,
	0x67, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x2a,
	0xd2, 0x02, 0x0a, 0x0d, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x6f, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x10, 0x00, 0x12,
	0x0e, 0x0a, 0x0a, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x10, 0x01, 0x12,
	0x0b, 0x0a, 0x07, 0x49, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08,
	0x49, 0x6e, 0x74, 0x38, 0x54, 0x79, 0x70, 0x65, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x6e,
	0x74, 0x31, 0x36, 0x54, 0x79, 0x70, 0x65, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x6e, 0x74,
	0x33, 0x32, 0x54, 0x79, 0x70, 0x65, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x36,
	0x34, 0x54, 0x79, 0x70, 0x65, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x49, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x49, 0x6e, 0x74, 0x38, 0x54, 0x79,
	0x70, 0x65, 0x10, 0x08, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x49, 0x6e, 0x74, 0x31, 0x36, 0x54, 0x79,
	0x70, 0x65, 0x10, 0x09, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x54, 0x79,
	0x70, 0x65, 0x10, 0x0a, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x54, 0x79,
	0x70, 0x65, 0x10, 0x0b, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x79, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x10, 0x0c, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x75, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x10, 0x0d,
	0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x32, 0x54, 0x79, 0x70, 0x65, 0x10,
	0x0e, 0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x36, 0x34, 0x54, 0x79, 0x70, 0x65,
	0x10, 0x0f, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x36, 0x34, 0x54,
	0x79, 0x70, 0x65, 0x10, 0x10, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78,
	0x31, 0x32, 0x38, 0x54, 0x79, 0x70, 0x65, 0x10, 0x11, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x72, 0x72,
	0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x10, 0x12, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x61, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x10, 0x13, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x74, 0x72, 0x75, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x10, 0x14, 0x42, 0x0c, 0x5a, 0x0a, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_message_proto_rawDescOnce sync.Once
	file_message_proto_rawDescData = file_message_proto_rawDesc
)

func file_message_proto_rawDescGZIP() []byte {
	file_message_proto_rawDescOnce.Do(func() {
		file_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_proto_rawDescData)
	})
	return file_message_proto_rawDescData
}

var file_message_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_message_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_message_proto_goTypes = []interface{}{
	(PrimitiveType)(0), // 0: strutlog.PrimitiveType
	(*Value)(nil),      // 1: strutlog.Value
	(*Field)(nil),      // 2: strutlog.Field
	(*Message)(nil),    // 3: strutlog.Message
	nil,                // 4: strutlog.Value.MapValueEntry
}
var file_message_proto_depIdxs = []int32{
	0, // 0: strutlog.Value.type:type_name -> strutlog.PrimitiveType
	1, // 1: strutlog.Value.array_value:type_name -> strutlog.Value
	4, // 2: strutlog.Value.map_value:type_name -> strutlog.Value.MapValueEntry
	1, // 3: strutlog.Field.value:type_name -> strutlog.Value
	2, // 4: strutlog.Message.fields:type_name -> strutlog.Field
	1, // 5: strutlog.Value.MapValueEntry.value:type_name -> strutlog.Value
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_message_proto_init() }
func file_message_proto_init() {
	if File_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Field); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_message_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Value_BoolValue)(nil),
		(*Value_StringValue)(nil),
		(*Value_Int32Value)(nil),
		(*Value_Int64Value)(nil),
		(*Value_Uint32Value)(nil),
		(*Value_Uint64Value)(nil),
		(*Value_Float32Value)(nil),
		(*Value_Float64Value)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_proto_goTypes,
		DependencyIndexes: file_message_proto_depIdxs,
		EnumInfos:         file_message_proto_enumTypes,
		MessageInfos:      file_message_proto_msgTypes,
	}.Build()
	File_message_proto = out.File
	file_message_proto_rawDesc = nil
	file_message_proto_goTypes = nil
	file_message_proto_depIdxs = nil
}
